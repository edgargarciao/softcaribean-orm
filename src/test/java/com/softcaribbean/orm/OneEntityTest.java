package com.softcaribbean.orm;

import java.util.Date;
import org.junit.After;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import com.softcaribbean.orm.classes.Estudiante;
import com.softcaribbean.orm.core.Configuracion;
import com.softcaribbean.orm.core.SesionFactoria;

/**
 * Unit test for simple App.
 */
@RunWith(JUnit4.class)
public class OneEntityTest{ 

  private static SesionFactoria sesion;
  private Object delete;
  
  @BeforeClass
  public static void inicializar(){
    sesion = new Configuracion("application.xml").crearSesionFactoria(); 
  }

  @Test
  public void givenAObjectCompleteAndIdAutoGeneratedWhenSaveThenStoreTheRegisterInDatabase(){
    // Arrange
    delete = new Estudiante(1000, "RADAMEL FALCACO", new Date(), 30);
    
    // Act
    sesion.guardar(delete);
    
    // Como no hice lectura entonces no verifico ni acierto.
  }
  
  @Test(expected=RuntimeException.class)
  public void givenAObjectIncompleteAndIdAutoGeneratedWhenSaveThenThrowARuntimeException(){
    // Arrange
    Estudiante estudiante = new Estudiante(1000, null, new Date(), 50);
    
    // Act
    sesion.guardar(estudiante);
    
    // Como no hice lectura entonces no verifico ni acierto.
  }
  
  @Test
  public void givenAObjectIncompleteAndIdAutoGeneratedWhenSaveThenStoreTheRegisterInDatabase(){
    // Arrange
    Estudiante estudiante = new Estudiante(1000, "CRISTIANO RONALDO", null, 50);
    
    // Act
    sesion.guardar(estudiante);
    
    // clean
    delete = estudiante;
    
    // Como no hice lectura entonces no verifico ni acierto.
  }
  
  @Test  
  public void givenAObjectNotNullAndIdAutoGeneratedWhenUpdateThenModifyTheRegisterInDatabase(){
    
    // Arrange
    Estudiante estudiante = new Estudiante(10000, "JUAN FERNANDO QUINTERO", new Date(), 20);
    sesion.guardar(estudiante);
    estudiante.setEdad(20);
    estudiante.setNombres("JAMES RODRGUEZ");
    
    // Act
    sesion.actualizar(estudiante);
    
    // clean
    delete = estudiante;
  }
  
  /**
   * Este test deja un registro en la base de datos por que no alcanza a eliminarlo
   */
  @Test(expected=RuntimeException.class)
  public void givenAObjectIncompleteAndIdAutoGeneratedWhenUpdateThenThrowARuntimeException(){
    // Arrange
    Estudiante estudiante = new Estudiante(10000, "JUAN FERNANDO QUINTERO", new Date(), 20);
    sesion.guardar(estudiante);
    estudiante.setNombres(null);
    
    // Act
    sesion.actualizar(estudiante);
    
  }
  
  @Test
  public void givenAObjectIncompleteAndIdAutoGeneratedWhenUpdateThenModifyTheRegisterInDatabase(){
    // Arrange
    Estudiante estudiante = new Estudiante(10000, "JUAN FERNANDO QUINTERO", new Date(), 20);
    sesion.guardar(estudiante);
    estudiante.setFechaNacimiento(null);
    
    // Act
    sesion.actualizar(estudiante);
    
    // clean
    sesion.eliminar(estudiante);
  }
  
  
  @Test
  public void givenAObjectNotNullAndIdAutoGeneratedWhenDeleteThenRemoveTheRegisterInDatabase() {
    // Arrange
    Estudiante estudiante = new Estudiante(10000, "DAVID OSPINA", new Date(), 28);
    sesion.guardar(estudiante);
    
    // Act
    sesion.eliminar(estudiante);
  }
  
  @After
  public void terminar() {
    if(delete != null) {
      
      // SI QUIERE VER LOS RESULTADOS EN LA BASE DE DATOS PUEDES COMENTAR ESTA LINEA
      sesion.eliminar(delete);
      delete = null;
    }
  }
}
